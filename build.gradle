import ru.justagod.plugin.CutterPlugin

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: CutterPlugin

sourceCompatibility = 1.8
targetCompatibility = 1.8

cutter {
    printSidesTree = true
    processDependencies = false
    annotation = 'ru.justagod.mineplugin.GradleSideOnly'
    classesCache = file('cutter-cache')
    classesDirs = [compileJava.destinationDir]
    def clientSide = side('CLIENT')
    def serverSide = side('SERVER')
    builds {
        client {
            targetSides = [clientSide]
            primalSides = [clientSide, serverSide]
        }
        server {
            targetSides = [serverSide]
            primalSides = [clientSide, serverSide]
        }
    }
}
dependencies {
    compile files('libs/tracker.jar')
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

version = "1.0"
group = "com.yourname.modid"
archivesBaseName = "messagesender"

task makeReleaseArchive(type: Zip) {
    from file('buildSrc')
    exclude 'build/'
    exclude 'gradle/'
    into 'buildSrc'
    archiveName 'release.zip'
}

idea.module.inheritOutputDirs = true

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.compile.collect {
        zipTree(it)
    }
}
