import java.nio.file.Files

tasks.register('javadocJar', Jar) {
    classifier = 'javadoc'
    from javadoc
}


tasks.register('sourcesJar', Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

shadowJar {
    archiveClassifier.set(null)
    classifier = null
    archiveFileName.set("cutter.jar")
    relocate 'org.objectweb', 'shadow.org.objectweb'
    relocate 'kotlin', 'shadow.kotlin'
    into("defaults") {
        from(project(":Defaults").tasks.named("renameOutput"))
    }
}

gradlePlugin {
    vcsUrl = 'https://github.com/JustAGod1/cutter'
    website = 'https://github.com/JustAGod1/cutter'

    //mavenCoordinates {
        //groupId = project.group
        //artifactId = "cutter"
        //version = project.version
    //}

    plugins {
        cutter {
            id = project.group.toString() + ".cutter"
            implementationClass = "ru.justagod.plugin.gradle.CutterPlugin"
            displayName = 'Cutter'
            description = 'Plugin to protect mods\' server code'
            tags.set(['protection', 'minecraft', 'forge'])
        }

    }
}

shadowJar.dependsOn(project(":Defaults").tasks.named("renameOutput"))
publishPlugins.dependsOn(shadowJar)

artifacts {
    archives javadocJar, sourcesJar
}
